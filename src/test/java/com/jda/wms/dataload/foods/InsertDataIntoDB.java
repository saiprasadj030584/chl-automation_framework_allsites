package com.jda.wms.dataload.foods;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.google.inject.Inject;
import com.jda.wms.context.Context;
import com.jda.wms.db.Database;
import com.jda.wms.utils.DateUtils;
import com.jda.wms.utils.Utilities;

public class InsertDataIntoDB {
	private Context context;
	private Database database;

	@Inject
	public InsertDataIntoDB(Context context,Database database) {
		this.context = context;
		this.database = database;
	}

	public void insertPreAdviceHeader(String preAdviceId) throws SQLException, ClassNotFoundException {
		String queryInsertDate = DateUtils.getCurrentSystemDateInDBFormat();
		String query = "INSERT INTO INTERFACE_PRE_ADVICE_HEADER (KEY, CLIENT_ID, PRE_ADVICE_ID, PRE_ADVICE_TYPE, SITE_ID, OWNER_ID, SUPPLIER_ID, CONTACT, CONTACT_PHONE, CONTACT_MOBILE, CONTACT_FAX, CONTACT_EMAIL, NAME, ADDRESS1, ADDRESS2, TOWN, COUNTY, POSTCODE, COUNTRY, STATUS, BOOKREF_ID, DUE_DSTAMP, RETURN_FLAG, SAMPLING_TYPE, RETURNED_ORDER_ID, EMAIL_CONFIRM, COLLECTION_REQD, CONSIGNMENT, LOAD_SEQUENCE, NOTES, DISALLOW_MERGE_RULES, OAP_RMA, DISALLOW_REPLENS, SUPPLIER_REFERENCE, CARRIER_NAME, CARRIER_REFERENCE, TOD, TOD_PLACE, MODE_OF_TRANSPORT, VAT_NUMBER, USER_DEF_TYPE_1, USER_DEF_TYPE_2, USER_DEF_TYPE_3, USER_DEF_TYPE_4, USER_DEF_TYPE_5, USER_DEF_TYPE_6, USER_DEF_TYPE_7, USER_DEF_TYPE_8, USER_DEF_CHK_1, USER_DEF_CHK_2, USER_DEF_CHK_3, USER_DEF_CHK_4, USER_DEF_DATE_1, USER_DEF_DATE_2, USER_DEF_DATE_3, USER_DEF_DATE_4, USER_DEF_NUM_1, USER_DEF_NUM_2, USER_DEF_NUM_3, USER_DEF_NUM_4, USER_DEF_NOTE_1, USER_DEF_NOTE_2, YARD_CONTAINER_TYPE, YARD_CONTAINER_ID, CE_CONSIGNMENT_ID, MASTER_PRE_ADVICE, COLLECTIVE_MODE, COLLECTIVE_SEQUENCE, CE_INVOICE_NUMBER, STATUS_REASON_CODE, PRIORITY, SESSION_TIME_ZONE_NAME, TIME_ZONE_NAME, NLS_CALENDAR, CLIENT_GROUP, MERGE_ACTION, MERGE_STATUS, MERGE_ERROR, MERGE_DSTAMP) VALUES (73221, 'M+S', '"+preAdviceId+"', 'PO', '9771', 'M+S', 'F01903', '', '', '', '', 'danielle.blagwin@gmail.com', 'LA CHABLISIENNE', '8 BOUEVARD PASTEUR', '', 'CHABLIS', '', '89800', 'FRA', 'Released', '', to_date('"+queryInsertDate+" 07.48.21.000000099', ''), 'N', '', '', 'N', 'N', '', NULL, '', 'N', NULL, 'N', '', '', '', '', '', 'SEA', '', '', '', '', '', '', '', '', '', 'N', 'N', 'N', 'N', to_date('"+queryInsertDate+" 07.48.21.000000099', ''), to_date('', ''), to_date('', ''), to_date('', ''), NULL, NULL, NULL, NULL, '', '', '', '', '', 'N', '', NULL, '', '', NULL, 'Europe/Belfast', 'Europe/London', '', 'FOODS', 'U', 'Pending', '', to_date('"+queryInsertDate+" 10.02.40.993326099', ''))";
		System.out.println(query);
		if (context.getConnection() == null) {
			database.connect();
		}
		Statement stmt = context.getConnection().createStatement();
		ResultSet rs = stmt.executeQuery(query);
		context.getConnection().commit();
	}

	public void insertPreAdviceLine(String preAdviceId, String productCategory) throws SQLException, ClassNotFoundException {
		String queryInsertDate = DateUtils.getCurrentSystemDateInDBFormat();
		String key = Utilities.getFourDigitRandomNumber()+".0";
		String query = null;
		String vintage = DateUtils.getYear() ;
		if (productCategory.contains("Ambient")||(null==productCategory)){
			query = "INSERT INTO INTERFACE_PRE_ADVICE_LINE (KEY, CLIENT_ID, PRE_ADVICE_ID, LINE_ID, SKU_ID, CONFIG_ID, USER_DEF_TYPE_6, HOST_PRE_ADVICE_ID, HOST_LINE_ID, BATCH_ID, EXPIRY_DSTAMP, MANUF_DSTAMP, PALLET_CONFIG, ORIGIN_ID, CONDITION_ID, TAG_ID, LOCK_CODE, SPEC_CODE, QTY_DUE, NOTES, SAP_PLANT, SAP_STORE_LOC, DISALLOW_MERGE_RULES, USER_DEF_TYPE_1, USER_DEF_TYPE_2, USER_DEF_TYPE_3, USER_DEF_TYPE_4, USER_DEF_TYPE_5, USER_DEF_TYPE_7, USER_DEF_TYPE_8, USER_DEF_CHK_1, USER_DEF_CHK_2, USER_DEF_CHK_3, USER_DEF_CHK_4, USER_DEF_DATE_1, USER_DEF_DATE_2, USER_DEF_DATE_3, USER_DEF_DATE_4, USER_DEF_NUM_1, USER_DEF_NUM_2, USER_DEF_NUM_3, USER_DEF_NUM_4, USER_DEF_NOTE_1, USER_DEF_NOTE_2, TRACKING_LEVEL, QTY_DUE_TOLERANCE, CE_COO, OWNER_ID, CE_CONSIGNMENT_ID, COLLECTIVE_MODE, COLLECTIVE_SEQUENCE, CE_UNDER_BOND, CE_LINK, PRODUCT_PRICE, PRODUCT_CURRENCY, CE_INVOICE_NUMBER, SERIAL_VALID_MERGE, SAMPLING_TYPE, EXPECTED_GROSS_WEIGHT, EXPECTED_NET_WEIGHT, SESSION_TIME_ZONE_NAME, TIME_ZONE_NAME, NLS_CALENDAR, CLIENT_GROUP, MERGE_ACTION, MERGE_STATUS, MERGE_ERROR, MERGE_DSTAMP) VALUES ("+key+", 'M+S', '"+preAdviceId+"', 20.0, '21036013', '21036013O01', '6', '', '', '', '', '', '', '', '', '', '', '', 980.0, '', '', '', 'N', '', '', '', '', '', '', '', '', '', '', '', '"+queryInsertDate+" 10.02.40.993326099', '', '', '', NULL, NULL, NULL, NULL, '', '', 'CASE', 150.0, '', 'M+S', '', '', NULL, '', '', NULL, '', '', 'N', '', NULL, NULL, 'Europe/Belfast', '', '', 'FOODS', 'A', 'Pending', '', '"+queryInsertDate+" 10.02.40.993326099')";
		}
		else if (productCategory.contains("BWS-Bonded")){
			query = "INSERT INTO INTERFACE_PRE_ADVICE_LINE (KEY, CLIENT_ID, PRE_ADVICE_ID, LINE_ID, SKU_ID, CONFIG_ID, USER_DEF_TYPE_6, HOST_PRE_ADVICE_ID, HOST_LINE_ID, BATCH_ID, EXPIRY_DSTAMP, MANUF_DSTAMP, PALLET_CONFIG, ORIGIN_ID, CONDITION_ID, TAG_ID, LOCK_CODE, SPEC_CODE, QTY_DUE, NOTES, SAP_PLANT, SAP_STORE_LOC, DISALLOW_MERGE_RULES, USER_DEF_TYPE_1, USER_DEF_TYPE_2, USER_DEF_TYPE_3, USER_DEF_TYPE_4, USER_DEF_TYPE_5, USER_DEF_TYPE_7, USER_DEF_TYPE_8, USER_DEF_CHK_1, USER_DEF_CHK_2, USER_DEF_CHK_3, USER_DEF_CHK_4, USER_DEF_DATE_1, USER_DEF_DATE_2, USER_DEF_DATE_3, USER_DEF_DATE_4, USER_DEF_NUM_1, USER_DEF_NUM_2, USER_DEF_NUM_3, USER_DEF_NUM_4, USER_DEF_NOTE_1, USER_DEF_NOTE_2, TRACKING_LEVEL, QTY_DUE_TOLERANCE, CE_COO, OWNER_ID, CE_CONSIGNMENT_ID, COLLECTIVE_MODE, COLLECTIVE_SEQUENCE, CE_UNDER_BOND, CE_LINK, PRODUCT_PRICE, PRODUCT_CURRENCY, CE_INVOICE_NUMBER, SERIAL_VALID_MERGE, SAMPLING_TYPE, EXPECTED_GROSS_WEIGHT, EXPECTED_NET_WEIGHT, SESSION_TIME_ZONE_NAME, TIME_ZONE_NAME, NLS_CALENDAR, CLIENT_GROUP, MERGE_ACTION, MERGE_STATUS, MERGE_ERROR, MERGE_DSTAMP) VALUES ("+key+", 'M+S', '"+preAdviceId+"', 10.0, '20002039', '20002039O01', '6', '', '', '', '', '', '', '', '', '', '', '', 980.0, '', '', '', 'N', '', '', '', '', '', '"+vintage+"', '', '', '', '', '', '"+queryInsertDate+" 10.02.40.993326099', '', '', '', NULL, NULL, NULL, NULL, '', '', 'CASE', 150.0, '', 'M+S', '', '', NULL, 'Y', '', NULL, '', '', 'N', '', NULL, NULL, 'Europe/Belfast', '', '', 'FOODS', 'A', 'Pending', '', '"+queryInsertDate+" 10.02.40.993326099')";
		}
		else if (productCategory.contains("BWS-Non-Bonded")){
			query = "INSERT INTO INTERFACE_PRE_ADVICE_LINE (KEY, CLIENT_ID, PRE_ADVICE_ID, LINE_ID, SKU_ID, CONFIG_ID, USER_DEF_TYPE_6, HOST_PRE_ADVICE_ID, HOST_LINE_ID, BATCH_ID, EXPIRY_DSTAMP, MANUF_DSTAMP, PALLET_CONFIG, ORIGIN_ID, CONDITION_ID, TAG_ID, LOCK_CODE, SPEC_CODE, QTY_DUE, NOTES, SAP_PLANT, SAP_STORE_LOC, DISALLOW_MERGE_RULES, USER_DEF_TYPE_1, USER_DEF_TYPE_2, USER_DEF_TYPE_3, USER_DEF_TYPE_4, USER_DEF_TYPE_5, USER_DEF_TYPE_7, USER_DEF_TYPE_8, USER_DEF_CHK_1, USER_DEF_CHK_2, USER_DEF_CHK_3, USER_DEF_CHK_4, USER_DEF_DATE_1, USER_DEF_DATE_2, USER_DEF_DATE_3, USER_DEF_DATE_4, USER_DEF_NUM_1, USER_DEF_NUM_2, USER_DEF_NUM_3, USER_DEF_NUM_4, USER_DEF_NOTE_1, USER_DEF_NOTE_2, TRACKING_LEVEL, QTY_DUE_TOLERANCE, CE_COO, OWNER_ID, CE_CONSIGNMENT_ID, COLLECTIVE_MODE, COLLECTIVE_SEQUENCE, CE_UNDER_BOND, CE_LINK, PRODUCT_PRICE, PRODUCT_CURRENCY, CE_INVOICE_NUMBER, SERIAL_VALID_MERGE, SAMPLING_TYPE, EXPECTED_GROSS_WEIGHT, EXPECTED_NET_WEIGHT, SESSION_TIME_ZONE_NAME, TIME_ZONE_NAME, NLS_CALENDAR, CLIENT_GROUP, MERGE_ACTION, MERGE_STATUS, MERGE_ERROR, MERGE_DSTAMP) VALUES ("+key+", 'M+S', '"+preAdviceId+"', 20.0, '20002032', '20002032O01', '6', '', '', '', '', '', '', '', '', '', '', '', 980.0, '', '', '', 'N', '', '', '', '', '', '"+vintage+"', '', '', '', '', '', '"+queryInsertDate+" 10.02.40.993326099', '', '', '', NULL, NULL, NULL, NULL, '', '', 'CASE', 150.0, '', 'M+S', '', '', NULL, 'N', '', NULL, '', '', 'N', '', NULL, NULL, 'Europe/Belfast', '', '', 'FOODS', 'A', 'Pending', '', '"+queryInsertDate+" 10.02.40.993326099')";
		}
		else if (productCategory.contains("BWS-New Vintage")){
			query = "INSERT INTO INTERFACE_PRE_ADVICE_LINE (KEY, CLIENT_ID, PRE_ADVICE_ID, LINE_ID, SKU_ID, CONFIG_ID, USER_DEF_TYPE_6, HOST_PRE_ADVICE_ID, HOST_LINE_ID, BATCH_ID, EXPIRY_DSTAMP, MANUF_DSTAMP, PALLET_CONFIG, ORIGIN_ID, CONDITION_ID, TAG_ID, LOCK_CODE, SPEC_CODE, QTY_DUE, NOTES, SAP_PLANT, SAP_STORE_LOC, DISALLOW_MERGE_RULES, USER_DEF_TYPE_1, USER_DEF_TYPE_2, USER_DEF_TYPE_3, USER_DEF_TYPE_4, USER_DEF_TYPE_5, USER_DEF_TYPE_7, USER_DEF_TYPE_8, USER_DEF_CHK_1, USER_DEF_CHK_2, USER_DEF_CHK_3, USER_DEF_CHK_4, USER_DEF_DATE_1, USER_DEF_DATE_2, USER_DEF_DATE_3, USER_DEF_DATE_4, USER_DEF_NUM_1, USER_DEF_NUM_2, USER_DEF_NUM_3, USER_DEF_NUM_4, USER_DEF_NOTE_1, USER_DEF_NOTE_2, TRACKING_LEVEL, QTY_DUE_TOLERANCE, CE_COO, OWNER_ID, CE_CONSIGNMENT_ID, COLLECTIVE_MODE, COLLECTIVE_SEQUENCE, CE_UNDER_BOND, CE_LINK, PRODUCT_PRICE, PRODUCT_CURRENCY, CE_INVOICE_NUMBER, SERIAL_VALID_MERGE, SAMPLING_TYPE, EXPECTED_GROSS_WEIGHT, EXPECTED_NET_WEIGHT, SESSION_TIME_ZONE_NAME, TIME_ZONE_NAME, NLS_CALENDAR, CLIENT_GROUP, MERGE_ACTION, MERGE_STATUS, MERGE_ERROR, MERGE_DSTAMP) VALUES ("+key+", 'M+S', '"+preAdviceId+"', 10.0, '20001266', '20001266O01', '6', '', '', '', '', '', '', '', '', '', '', '', 980.0, '', '', '', 'N', '', '', '', '', '', '"+vintage+"', '', '', '', '', '', '"+queryInsertDate+" 10.02.40.993326099', '', '', '', NULL, NULL, NULL, NULL, '', '', 'CASE', 150.0, '', 'M+S', '', '', NULL, 'Y', '', NULL, '', '', 'N', '', NULL, NULL, 'Europe/Belfast', '', '', 'FOODS', 'A', 'Pending', '', '"+queryInsertDate+" 10.02.40.993326099')";
		}
		else if (productCategory.contains("BWS-F23 Bonded")){
			query = "INSERT INTO INTERFACE_PRE_ADVICE_LINE (KEY, CLIENT_ID, PRE_ADVICE_ID, LINE_ID, SKU_ID, CONFIG_ID, USER_DEF_TYPE_6, HOST_PRE_ADVICE_ID, HOST_LINE_ID, BATCH_ID, EXPIRY_DSTAMP, MANUF_DSTAMP, PALLET_CONFIG, ORIGIN_ID, CONDITION_ID, TAG_ID, LOCK_CODE, SPEC_CODE, QTY_DUE, NOTES, SAP_PLANT, SAP_STORE_LOC, DISALLOW_MERGE_RULES, USER_DEF_TYPE_1, USER_DEF_TYPE_2, USER_DEF_TYPE_3, USER_DEF_TYPE_4, USER_DEF_TYPE_5, USER_DEF_TYPE_7, USER_DEF_TYPE_8, USER_DEF_CHK_1, USER_DEF_CHK_2, USER_DEF_CHK_3, USER_DEF_CHK_4, USER_DEF_DATE_1, USER_DEF_DATE_2, USER_DEF_DATE_3, USER_DEF_DATE_4, USER_DEF_NUM_1, USER_DEF_NUM_2, USER_DEF_NUM_3, USER_DEF_NUM_4, USER_DEF_NOTE_1, USER_DEF_NOTE_2, TRACKING_LEVEL, QTY_DUE_TOLERANCE, CE_COO, OWNER_ID, CE_CONSIGNMENT_ID, COLLECTIVE_MODE, COLLECTIVE_SEQUENCE, CE_UNDER_BOND, CE_LINK, PRODUCT_PRICE, PRODUCT_CURRENCY, CE_INVOICE_NUMBER, SERIAL_VALID_MERGE, SAMPLING_TYPE, EXPECTED_GROSS_WEIGHT, EXPECTED_NET_WEIGHT, SESSION_TIME_ZONE_NAME, TIME_ZONE_NAME, NLS_CALENDAR, CLIENT_GROUP, MERGE_ACTION, MERGE_STATUS, MERGE_ERROR, MERGE_DSTAMP) VALUES ("+key+", 'M+S', '"+preAdviceId+"', 20.0, '21126978', '21126978O01', '6', '', '', '', '', '', '', '', '', '', '', '', 980.0, '', '', '', 'N', '', '', '', '', '', '"+vintage+"', '', '', '', '', '', '"+queryInsertDate+" 10.02.40.993326099', '', '', '', NULL, NULL, NULL, NULL, '', '', 'CASE', 150.0, '', 'M+S', '', '', NULL, 'Y', '', NULL, '', '', 'N', '', NULL, NULL, 'Europe/Belfast', '', '', 'FOODS', 'A', 'Pending', '', '"+queryInsertDate+" 10.02.40.993326099')";
		}
		
		System.out.println(query);
		if (context.getConnection() == null) {
			database.connect();
		}
		Statement stmt = context.getConnection().createStatement();
		ResultSet rs = stmt.executeQuery(query);
		context.getConnection().commit();
	}
}
